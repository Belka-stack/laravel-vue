{"ast":null,"code":"export default {\n  props: {\n    // Donnée reçues depuis le parent (une recette existante à modifier)\n    editData: Object\n  },\n  data() {\n    return {\n      // Etat local du formulaire (titre, description, ingrédients)\n      form: {\n        title: '',\n        description: '',\n        ingredient: ''\n      }\n    };\n  },\n  computed: {\n    // Indique si on est en mode édition (si editData est fourni)\n    isEdit() {\n      return !!this.editData;\n    }\n  },\n  watch: {\n    // Met à jour le formaulaire si editData (ex: nouvelle recette à editer)\n    editData(newVal) {\n      if (newVal) {\n        this.form = {\n          ...newVal,\n          ingredient: newVal.ingredient || ''\n        }; // S'assurer que 'ingredient' est bien pris en compte lors de l'édition\n      }\n    }\n  },\n  methods: {\n    // Emet un événement vers le parent pour ajouter ou modifier la recette\n    submitForm() {\n      this.$emit(this.isEdit ? 'update-recipe' : 'create-recipe', {\n        ...this.form\n      });\n      this.resetForm();\n    },\n    // Réinitialise les champs du formulaire et émet un événement pour annuler l'édition'\n    resetForm() {\n      this.form = {\n        title: '',\n        description: '',\n        ingredients: ''\n      };\n      this.$emit('cancel-edit');\n    }\n  }\n};","map":{"version":3,"names":["props","editData","Object","data","form","title","description","ingredient","computed","isEdit","watch","newVal","methods","submitForm","$emit","resetForm","ingredients"],"sources":["/Users/belkabakouche/Desktop/laravel-vue/mon-projet-recettes/frontend/src/components/RecipeForm.vue"],"sourcesContent":["<template>\n\n    <!-- formulaire de création ou modification de recette -->\n    <v-form @submit.prevent=\"submitForm\">\n\n    <!-- Champ pour le titre de la recette -->    \n    <v-text-field v-model=\"form.title\" label=\"Titre\" required />\n\n    <!-- Zone de texte pour la description de la recette  -->\n    <v-textarea v-model=\"form.description\" label=\"Description\" rows=\"3\" />\n\n    <!-- Zone de texte pour les ingrédients (séparés par des virgules) -->\n    <v-textarea v-model=\"form.ingredient\" label=\"Ingrédients (séparés par des virgules)\" rows=\"3\" />\n\n    <!-- Bouton de soummision (ajouter ou modifier selon le mode) -->\n    <v-btn type=\"submit\" color=\"primary\" class=\"mr-2\">{{ isEdit ? 'Modifier' : 'Ajouter' }}</v-btn>\n\n    <!-- Bouton pour réinitialiser le formulaire (annuler l'edition) -->\n    <v-btn text @click=\"resetForm\">Annuler</v-btn>\n\n    </v-form>\n\n</template>\n\n<script>\n\nexport default {\n    props: {\n        // Donnée reçues depuis le parent (une recette existante à modifier)\n        editData: Object,\n    },\n    data() {\n        return {\n            // Etat local du formulaire (titre, description, ingrédients)\n            form: {\n                title: '',\n                description: '',\n                ingredient: '',\n            },\n        };\n    },\n    computed: {\n        // Indique si on est en mode édition (si editData est fourni)\n        isEdit() {\n            return !!this.editData;\n        },\n    },\n    watch: {\n        // Met à jour le formaulaire si editData (ex: nouvelle recette à editer)\n        editData(newVal) {\n            if (newVal) {\n                this.form = { ...newVal, ingredient: newVal.ingredient || '' };// S'assurer que 'ingredient' est bien pris en compte lors de l'édition\n            }\n        },\n    },\n    methods: {\n        // Emet un événement vers le parent pour ajouter ou modifier la recette\n        submitForm() {\n            this.$emit(this.isEdit ? 'update-recipe' : 'create-recipe', { ...this.form });\n            this.resetForm();\n        },\n        // Réinitialise les champs du formulaire et émet un événement pour annuler l'édition'\n        resetForm() {\n            this.form = { title: '', description: '', ingredients: ''};\n            this.$emit('cancel-edit');\n        },\n    },\n};\n\n</script>"],"mappings":"AA0BA,eAAe;EACXA,KAAK,EAAE;IACH;IACAC,QAAQ,EAAEC;EACd,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACH;MACAC,IAAI,EAAE;QACFC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,UAAU,EAAE;MAChB;IACJ,CAAC;EACL,CAAC;EACDC,QAAQ,EAAE;IACN;IACAC,MAAMA,CAAA,EAAG;MACL,OAAO,CAAC,CAAC,IAAI,CAACR,QAAQ;IAC1B;EACJ,CAAC;EACDS,KAAK,EAAE;IACH;IACAT,QAAQA,CAACU,MAAM,EAAE;MACb,IAAIA,MAAM,EAAE;QACR,IAAI,CAACP,IAAG,GAAI;UAAE,GAAGO,MAAM;UAAEJ,UAAU,EAAEI,MAAM,CAACJ,UAAS,IAAK;QAAG,CAAC,CAAC;MACnE;IACJ;EACJ,CAAC;EACDK,OAAO,EAAE;IACL;IACAC,UAAUA,CAAA,EAAG;MACT,IAAI,CAACC,KAAK,CAAC,IAAI,CAACL,MAAK,GAAI,eAAc,GAAI,eAAe,EAAE;QAAE,GAAG,IAAI,CAACL;MAAK,CAAC,CAAC;MAC7E,IAAI,CAACW,SAAS,CAAC,CAAC;IACpB,CAAC;IACD;IACAA,SAASA,CAAA,EAAG;MACR,IAAI,CAACX,IAAG,GAAI;QAAEC,KAAK,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEU,WAAW,EAAE;MAAE,CAAC;MAC1D,IAAI,CAACF,KAAK,CAAC,aAAa,CAAC;IAC7B;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}